@model RRDv2.Models.Room

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Room</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FloorId, "FloorId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FloorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FloorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoomNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <script>
    function OnSelectedChanged(sender, e) {

        var otherTxt = document.getElementById('other_room');

        if (sender.value == "Other") {
            otherTxt.style.display = "";
        }
        else {
            otherTxt.style.display = "none";
        }

    }
        </script>
        <div class="form-group">
            @Html.LabelFor(model => model.RoomType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EnumDropDownListFor(model => model.RoomType, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("room_selection", (IEnumerable<SelectListItem>)Session["RoomTypes"], htmlAttributes: new { @class = "form-control", onchange = "javascript:OnSelectedChanged(this,event);", id = "room_selection" })
                @Html.Editor("room_type", new { htmlAttributes = new { @class = "form-control", style = "display:none", id = "other_room" } })
                @Html.ValidationMessageFor(model => model.RoomType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfBeds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfBeds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfBeds, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BedSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.BedSize, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BedSize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RoomSize, "Room Size (sq/ft)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoomSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomSize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ElevatorDistance, "Elevator Distance (ft)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ElevatorDistance, "Elevator Distance (ft)",new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ElevatorDistance, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConnectingRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.ConnectingRoom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConnectingRoom, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
